{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/admin/plan-context.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, type ReactNode } from \"react\"\nimport type { PlanTier } from \"@/data/pricing-plans\"\n\ninterface PlanContextType {\n  currentPlan: PlanTier\n  usedSeconds: number\n  setCurrentPlan: (plan: PlanTier) => void\n  setUsedSeconds: (seconds: number) => void\n  updatePlanAndUsage: (plan: PlanTier, usedSeconds: number) => void\n}\n\nconst PlanContext = createContext<PlanContextType | undefined>(undefined)\n\nexport function PlanProvider({\n  children,\n  initialPlan = \"Free\",\n  initialUsedSeconds = 503,\n}: {\n  children: ReactNode\n  initialPlan?: PlanTier\n  initialUsedSeconds?: number\n}) {\n  const [currentPlan, setCurrentPlan] = useState<PlanTier>(initialPlan)\n  const [usedSeconds, setUsedSeconds] = useState(initialUsedSeconds)\n\n  // Add a function to update both plan and usage at once\n  const updatePlanAndUsage = (plan: PlanTier, seconds: number) => {\n    setCurrentPlan(plan)\n    setUsedSeconds(seconds)\n  }\n\n  return (\n    <PlanContext.Provider\n      value={{\n        currentPlan,\n        usedSeconds,\n        setCurrentPlan,\n        setUsedSeconds,\n        updatePlanAndUsage,\n      }}\n    >\n      {children}\n    </PlanContext.Provider>\n  )\n}\n\nexport function usePlan() {\n  const context = useContext(PlanContext)\n  if (context === undefined) {\n    throw new Error(\"usePlan must be used within a PlanProvider\")\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAaA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAC3B,QAAQ,EACR,cAAc,MAAM,EACpB,qBAAqB,GAAG,EAKzB;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;IACzD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,uDAAuD;IACvD,MAAM,qBAAqB,CAAC,MAAgB;QAC1C,eAAe;QACf,eAAe;IACjB;IAEA,qBACE,8OAAC,YAAY,QAAQ;QACnB,OAAO;YACL;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/data/user-data.ts"],"sourcesContent":["// Get a date from 2 weeks ago\nconst getTwoWeeksAgoDate = (): string => {\n  const today = new Date()\n  const twoWeeksAgo = new Date(today)\n  twoWeeksAgo.setDate(today.getDate() - 14) // Subtract 14 days\n  return twoWeeksAgo.toISOString().split(\"T\")[0] // Return in YYYY-MM-DD format\n}\n\n// Centralized user data that can be used across components\nexport const userData = {\n  username: \"fromjasp\",\n  firstName: \"Jasper\",\n  lastName: \"Hartsuijker\",\n  email: \"jasper@stemacteren.nl\",\n  emailVerified: true,\n  bio: \"Product designer and developer based in Amsterdam.\",\n  marketingEmails: true,\n  productUpdates: true,\n  securityAlerts: true,\n  language: \"english\",\n  signupDate: getTwoWeeksAgoDate(),\n  lastLogin: \"2023-11-28\",\n}\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAC9B,MAAM,qBAAqB;IACzB,MAAM,QAAQ,IAAI;IAClB,MAAM,cAAc,IAAI,KAAK;IAC7B,YAAY,OAAO,CAAC,MAAM,OAAO,KAAK,IAAI,mBAAmB;;IAC7D,OAAO,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,8BAA8B;;AAC/E;AAGO,MAAM,WAAW;IACtB,UAAU;IACV,WAAW;IACX,UAAU;IACV,OAAO;IACP,eAAe;IACf,KAAK;IACL,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;IAChB,UAAU;IACV,YAAY;IACZ,WAAW;AACb","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/lib/api/user-service.ts"],"sourcesContent":["import type { UserProfile, UserPreferences, UserStats } from \"@/types/user\"\nimport { userData as mockUserData } from \"@/data/user-data\"\n\n// This is the abstraction layer for user data\n// When migrating to a real database, only this file needs to change\nexport class UserService {\n  // In a real implementation, this would fetch from an API or database\n  static async getCurrentUser(): Promise<UserProfile> {\n    // Simulate API call with a small delay\n    await new Promise((resolve) => setTimeout(resolve, 100))\n\n    // Convert the mock data to match our interface\n    // This mapping ensures we have a consistent data structure\n    return {\n      id: \"1\",\n      username: mockUserData.username,\n      firstName: mockUserData.firstName,\n      lastName: mockUserData.lastName,\n      email: mockUserData.email,\n      emailVerified: mockUserData.emailVerified,\n      bio: mockUserData.bio,\n      avatarUrl: \"/user-avatar.jpeg\",\n      plan: \"Professional\",\n      signupDate: mockUserData.signupDate,\n      lastLogin: mockUserData.lastLogin,\n      preferences: {\n        marketingEmails: mockUserData.marketingEmails,\n        productUpdates: mockUserData.productUpdates,\n        securityAlerts: mockUserData.securityAlerts,\n        language: mockUserData.language,\n        theme: \"dark\",\n      },\n    }\n  }\n\n  static async updateUserProfile(updates: Partial<UserProfile>): Promise<UserProfile> {\n    // Simulate API call with a small delay\n    await new Promise((resolve) => setTimeout(resolve, 200))\n\n    // In a real implementation, this would send the updates to an API\n    console.log(\"Updating user profile:\", updates)\n\n    // Return the updated user (in a real implementation, this would come from the API)\n    const currentUser = await this.getCurrentUser()\n    return { ...currentUser, ...updates }\n  }\n\n  static async updateUserPreferences(preferences: Partial<UserPreferences>): Promise<UserPreferences> {\n    // Simulate API call\n    await new Promise((resolve) => setTimeout(resolve, 150))\n\n    // In a real implementation, this would send the updates to an API\n    console.log(\"Updating user preferences:\", preferences)\n\n    // Return the updated preferences\n    const currentUser = await this.getCurrentUser()\n    return { ...currentUser.preferences, ...preferences }\n  }\n\n  static async getUserStats(): Promise<UserStats> {\n    // Simulate API call\n    await new Promise((resolve) => setTimeout(resolve, 120))\n\n    // Mock stats data\n    return {\n      totalSessions: 42,\n      totalAudioTime: 18000, // in seconds\n      averageSessionLength: 428, // in seconds\n    }\n  }\n}\n"],"names":[],"mappings":";;;AACA;;AAIO,MAAM;IACX,qEAAqE;IACrE,aAAa,iBAAuC;QAClD,uCAAuC;QACvC,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;QAEnD,+CAA+C;QAC/C,2DAA2D;QAC3D,OAAO;YACL,IAAI;YACJ,UAAU,oHAAA,CAAA,WAAY,CAAC,QAAQ;YAC/B,WAAW,oHAAA,CAAA,WAAY,CAAC,SAAS;YACjC,UAAU,oHAAA,CAAA,WAAY,CAAC,QAAQ;YAC/B,OAAO,oHAAA,CAAA,WAAY,CAAC,KAAK;YACzB,eAAe,oHAAA,CAAA,WAAY,CAAC,aAAa;YACzC,KAAK,oHAAA,CAAA,WAAY,CAAC,GAAG;YACrB,WAAW;YACX,MAAM;YACN,YAAY,oHAAA,CAAA,WAAY,CAAC,UAAU;YACnC,WAAW,oHAAA,CAAA,WAAY,CAAC,SAAS;YACjC,aAAa;gBACX,iBAAiB,oHAAA,CAAA,WAAY,CAAC,eAAe;gBAC7C,gBAAgB,oHAAA,CAAA,WAAY,CAAC,cAAc;gBAC3C,gBAAgB,oHAAA,CAAA,WAAY,CAAC,cAAc;gBAC3C,UAAU,oHAAA,CAAA,WAAY,CAAC,QAAQ;gBAC/B,OAAO;YACT;QACF;IACF;IAEA,aAAa,kBAAkB,OAA6B,EAAwB;QAClF,uCAAuC;QACvC,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;QAEnD,kEAAkE;QAClE,QAAQ,GAAG,CAAC,0BAA0B;QAEtC,mFAAmF;QACnF,MAAM,cAAc,MAAM,IAAI,CAAC,cAAc;QAC7C,OAAO;YAAE,GAAG,WAAW;YAAE,GAAG,OAAO;QAAC;IACtC;IAEA,aAAa,sBAAsB,WAAqC,EAA4B;QAClG,oBAAoB;QACpB,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;QAEnD,kEAAkE;QAClE,QAAQ,GAAG,CAAC,8BAA8B;QAE1C,iCAAiC;QACjC,MAAM,cAAc,MAAM,IAAI,CAAC,cAAc;QAC7C,OAAO;YAAE,GAAG,YAAY,WAAW;YAAE,GAAG,WAAW;QAAC;IACtD;IAEA,aAAa,eAAmC;QAC9C,oBAAoB;QACpB,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;QAEnD,kBAAkB;QAClB,OAAO;YACL,eAAe;YACf,gBAAgB;YAChB,sBAAsB;QACxB;IACF;AACF","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/contexts/user-context.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect, type ReactNode } from \"react\"\nimport type { UserProfile, UserPreferences, UserStats } from \"@/types/user\"\nimport { UserService } from \"@/lib/api/user-service\"\n\ninterface UserContextType {\n  user: UserProfile | null\n  userStats: UserStats | null\n  isLoading: boolean\n  error: Error | null\n  updateProfile: (updates: Partial<UserProfile>) => Promise<void>\n  updatePreferences: (preferences: Partial<UserPreferences>) => Promise<void>\n  refreshUserData: () => Promise<void>\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined)\n\nexport function UserProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<UserProfile | null>(null)\n  const [userStats, setUserStats] = useState<UserStats | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<Error | null>(null)\n\n  const fetchUserData = async () => {\n    try {\n      setIsLoading(true)\n      const userData = await UserService.getCurrentUser()\n      setUser(userData)\n\n      const stats = await UserService.getUserStats()\n      setUserStats(stats)\n\n      setError(null)\n    } catch (err) {\n      console.error(\"Error fetching user data:\", err)\n      setError(err instanceof Error ? err : new Error(\"Failed to fetch user data\"))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchUserData()\n  }, [])\n\n  const updateProfile = async (updates: Partial<UserProfile>) => {\n    try {\n      setIsLoading(true)\n      const updatedUser = await UserService.updateUserProfile(updates)\n      setUser(updatedUser)\n    } catch (err) {\n      console.error(\"Error updating user profile:\", err)\n      setError(err instanceof Error ? err : new Error(\"Failed to update user profile\"))\n      throw err\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const updatePreferences = async (preferences: Partial<UserPreferences>) => {\n    try {\n      setIsLoading(true)\n      const updatedPreferences = await UserService.updateUserPreferences(preferences)\n\n      if (user) {\n        setUser({\n          ...user,\n          preferences: updatedPreferences,\n        })\n      }\n    } catch (err) {\n      console.error(\"Error updating user preferences:\", err)\n      setError(err instanceof Error ? err : new Error(\"Failed to update user preferences\"))\n      throw err\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const refreshUserData = async () => {\n    await fetchUserData()\n  }\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        userStats,\n        isLoading,\n        error,\n        updateProfile,\n        updatePreferences,\n        refreshUserData,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport function useUser() {\n  const context = useContext(UserContext)\n  if (context === undefined) {\n    throw new Error(\"useUser must be used within a UserProvider\")\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AAJA;;;;AAgBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAC7D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IAEjD,MAAM,gBAAgB;QACpB,IAAI;YACF,aAAa;YACb,MAAM,WAAW,MAAM,6HAAA,CAAA,cAAW,CAAC,cAAc;YACjD,QAAQ;YAER,MAAM,QAAQ,MAAM,6HAAA,CAAA,cAAW,CAAC,YAAY;YAC5C,aAAa;YAEb,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,SAAS,eAAe,QAAQ,MAAM,IAAI,MAAM;QAClD,SAAU;YACR,aAAa;QACf;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,gBAAgB,OAAO;QAC3B,IAAI;YACF,aAAa;YACb,MAAM,cAAc,MAAM,6HAAA,CAAA,cAAW,CAAC,iBAAiB,CAAC;YACxD,QAAQ;QACV,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,SAAS,eAAe,QAAQ,MAAM,IAAI,MAAM;YAChD,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,aAAa;YACb,MAAM,qBAAqB,MAAM,6HAAA,CAAA,cAAW,CAAC,qBAAqB,CAAC;YAEnE,IAAI,MAAM;gBACR,QAAQ;oBACN,GAAG,IAAI;oBACP,aAAa;gBACf;YACF;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,oCAAoC;YAClD,SAAS,eAAe,QAAQ,MAAM,IAAI,MAAM;YAChD,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,kBAAkB;QACtB,MAAM;IACR;IAEA,qBACE,8OAAC,YAAY,QAAQ;QACnB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/use-toast.ts"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback } from \"react\"\n\nexport type ToastProps = {\n  id: string\n  title?: string\n  description?: string\n  duration?: number\n  variant?: \"default\" | \"destructive\" | \"success\"\n}\n\nexport function useToast() {\n  const [toasts, setToasts] = useState<ToastProps[]>([])\n\n  const toast = useCallback(({ title, description, duration = 5000, variant = \"default\" }: Omit<ToastProps, \"id\">) => {\n    const id = Math.random().toString(36).substring(2, 9)\n    const newToast = { id, title, description, duration, variant }\n\n    setToasts((prev) => [...prev, newToast])\n    console.log(\"Toast created:\", newToast) // Debug log\n\n    return id\n  }, [])\n\n  const dismiss = useCallback((id: string) => {\n    setToasts((prev) => prev.filter((toast) => toast.id !== id))\n  }, [])\n\n  useEffect(() => {\n    const timers: NodeJS.Timeout[] = []\n\n    toasts.forEach((toast) => {\n      const timer = setTimeout(() => {\n        dismiss(toast.id)\n      }, toast.duration)\n\n      timers.push(timer)\n    })\n\n    return () => {\n      timers.forEach((timer) => clearTimeout(timer))\n    }\n  }, [toasts, dismiss])\n\n  return { toast, dismiss, toasts }\n}\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAYO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAErD,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,IAAI,EAAE,UAAU,SAAS,EAA0B;QAC7G,MAAM,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;QACnD,MAAM,WAAW;YAAE;YAAI;YAAO;YAAa;YAAU;QAAQ;QAE7D,UAAU,CAAC,OAAS;mBAAI;gBAAM;aAAS;QACvC,QAAQ,GAAG,CAAC,kBAAkB,UAAU,YAAY;;QAEpD,OAAO;IACT,GAAG,EAAE;IAEL,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC3B,UAAU,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,QAAU,MAAM,EAAE,KAAK;IAC1D,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAA2B,EAAE;QAEnC,OAAO,OAAO,CAAC,CAAC;YACd,MAAM,QAAQ,WAAW;gBACvB,QAAQ,MAAM,EAAE;YAClB,GAAG,MAAM,QAAQ;YAEjB,OAAO,IAAI,CAAC;QACd;QAEA,OAAO;YACL,OAAO,OAAO,CAAC,CAAC,QAAU,aAAa;QACzC;IACF,GAAG;QAAC;QAAQ;KAAQ;IAEpB,OAAO;QAAE;QAAO;QAAS;IAAO;AAClC","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { X } from \"lucide-react\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts, dismiss } = useToast()\n  const [mounted, setMounted] = useState(false)\n\n  // Only render on client\n  useEffect(() => {\n    setMounted(true)\n  }, [])\n\n  if (!mounted) return null\n\n  if (toasts.length === 0) return null\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50 flex flex-col gap-2\">\n      {toasts.map((toast) => (\n        <div\n          key={toast.id}\n          className={`\n            animate-in slide-in-from-bottom-5 \n            rounded-md border border-gray-700 bg-gray-800 p-4 shadow-lg\n            ${toast.variant === \"success\" ? \"border-green-500\" : \"\"}\n            ${toast.variant === \"destructive\" ? \"border-red-500\" : \"\"}\n          `}\n          style={{ minWidth: \"300px\", maxWidth: \"400px\" }}\n        >\n          <div className=\"flex items-start justify-between\">\n            <div>\n              {toast.title && <h3 className=\"font-medium text-white\">{toast.title}</h3>}\n              {toast.description && <p className=\"mt-1 text-sm text-gray-300\">{toast.description}</p>}\n            </div>\n            <button\n              onClick={() => dismiss(toast.id)}\n              className=\"ml-4 rounded-md p-1 text-gray-400 hover:bg-gray-700 hover:text-white\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,WAAQ,AAAD;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,wBAAwB;IACxB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,IAAI,CAAC,SAAS,OAAO;IAErB,IAAI,OAAO,MAAM,KAAK,GAAG,OAAO;IAEhC,qBACE,8OAAC;QAAI,WAAU;kBACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;gBAEC,WAAW,CAAC;;;YAGV,EAAE,MAAM,OAAO,KAAK,YAAY,qBAAqB,GAAG;YACxD,EAAE,MAAM,OAAO,KAAK,gBAAgB,mBAAmB,GAAG;UAC5D,CAAC;gBACD,OAAO;oBAAE,UAAU;oBAAS,UAAU;gBAAQ;0BAE9C,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;gCACE,MAAM,KAAK,kBAAI,8OAAC;oCAAG,WAAU;8CAA0B,MAAM,KAAK;;;;;;gCAClE,MAAM,WAAW,kBAAI,8OAAC;oCAAE,WAAU;8CAA8B,MAAM,WAAW;;;;;;;;;;;;sCAEpF,8OAAC;4BACC,SAAS,IAAM,QAAQ,MAAM,EAAE;4BAC/B,WAAU;sCAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;eAlBZ,MAAM,EAAE;;;;;;;;;;AAyBvB","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/app/providers.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { ThemeProvider } from \"@/components/theme-provider\"\nimport { LanguageProvider } from \"@/components/language-provider\"\nimport { PlanProvider } from \"@/components/admin/plan-context\"\nimport { UserProvider } from \"@/contexts/user-context\"\nimport { Toaster } from \"@/components/ui/toaster\"\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <ThemeProvider attribute=\"class\" defaultTheme=\"dark\" enableSystem>\n      <LanguageProvider>\n        <PlanProvider>\n          <UserProvider>\n            {children}\n            <Toaster />\n          </UserProvider>\n        </PlanProvider>\n      </LanguageProvider>\n    </ThemeProvider>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAMA;AACA;AACA;AARA;;;;;;;AAUO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBACE,8OAAC;QAAc,WAAU;QAAQ,cAAa;QAAO,YAAY;kBAC/D,cAAA,8OAAC;sBACC,cAAA,8OAAC,uIAAA,CAAA,eAAY;0BACX,cAAA,8OAAC,4HAAA,CAAA,eAAY;;wBACV;sCACD,8OAAC,4HAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;;;;;;AAMpB","debugId":null}}]
}