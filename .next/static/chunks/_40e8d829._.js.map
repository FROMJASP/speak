{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className,\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className,\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;0BAC/B,cAAA,6LAAC,qKAAA,CAAA,QAAqB;oBAAC,WAAU;;;;;;;;;;;0BAEnC,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/badge.tsx"],"sourcesContent":["import type * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold text-foreground transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default: \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive: \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0LACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,aAAa;YACb,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAKF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBAAO,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC7E;KAFS","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface ProgressProps extends React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> {\n  indicatorClassName?: string\n}\n\nconst Progress = React.forwardRef<React.ElementRef<typeof ProgressPrimitive.Root>, ProgressProps>(\n  ({ className, value, indicatorClassName, ...props }, ref) => (\n    <ProgressPrimitive.Root\n      ref={ref}\n      className={cn(\"relative h-4 w-full overflow-hidden rounded-full bg-secondary\", className)}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        className={cn(\"h-full w-full flex-1 bg-primary transition-all\", indicatorClassName)}\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  ),\n)\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAWA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,OAAO,EAAE,oBACnD,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iEAAiE;QAC9E,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;YAChE,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAKlE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium text-foreground ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        // New custom variants\n        cream: \"bg-accent text-bold hover:bg-accent/80 dark:bg-accent dark:text-bold-dark dark:hover:bg-accent/80\",\n        dark: \"bg-bold text-background hover:bg-bold/90 dark:bg-bold-dark dark:text-background dark:hover:bg-bold-dark/90\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0SACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;YACN,sBAAsB;YACtB,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBAAO,6LAAC;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QAAK,KAAK;QAAM,GAAG,KAAK;;;;;;AAC/F;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/data/pricing-plans.ts"],"sourcesContent":["export type PlanTier = \"Free\" | \"Starter\" | \"Creator\" | \"Professional\" | \"Company\"\n\nexport interface PlanModel {\n  name: string\n  languages: Array<\"ENG\" | \"GER\" | \"DUTCH\">\n}\n\nexport interface PricingPlan {\n  tier: PlanTier\n  priceMonthly: number\n  priceAnnually: number\n  audioMinutes: number\n  maxVoices: number\n  models: PlanModel[]\n  usage: \"Non-commercial\" | \"Commercial\"\n  apiAccess: boolean\n  downloadQuality: string\n  popular?: boolean\n  experimental?: boolean\n  betaDiscount?: {\n    regularPrice: number\n    discountPercentage: number\n  }\n}\n\nexport const pricingPlans: PricingPlan[] = [\n  {\n    tier: \"Free\",\n    priceMonthly: 0,\n    priceAnnually: 0,\n    audioMinutes: 10, // 10 minutes per month\n    maxVoices: 3,\n    models: [\n      { name: \"Broad Model\", languages: [\"ENG\", \"GER\", \"DUTCH\"] },\n      { name: \"Meditation Model\", languages: [\"ENG\"] },\n    ],\n    usage: \"Non-commercial\",\n    apiAccess: true,\n    downloadQuality: \"mp3 (128 kbps)\",\n  },\n  {\n    tier: \"Starter\",\n    priceMonthly: 5,\n    priceAnnually: 48, // €4/month when billed annually\n    audioMinutes: 45, // 45 minutes per month\n    maxVoices: 5,\n    models: [\n      { name: \"Broad Model\", languages: [\"ENG\", \"GER\", \"DUTCH\"] },\n      { name: \"Meditation Model\", languages: [\"ENG\"] },\n      { name: \"Conversation Model\", languages: [\"ENG\"] },\n    ],\n    usage: \"Commercial\",\n    apiAccess: true,\n    downloadQuality: \"mp3 (192 kbps)\",\n  },\n  {\n    tier: \"Creator\",\n    priceMonthly: 10,\n    priceAnnually: 96, // €8/month when billed annually\n    audioMinutes: 120, // 2 hours per month\n    maxVoices: 15, // Updated from 10 to 15\n    models: [\n      { name: \"Broad Model\", languages: [\"ENG\", \"GER\", \"DUTCH\"] },\n      { name: \"Meditation Model\", languages: [\"ENG\"] },\n      { name: \"Conversation Model\", languages: [\"ENG\"] },\n      { name: \"Character Model\", languages: [\"ENG\"] },\n    ],\n    usage: \"Commercial\",\n    apiAccess: true,\n    downloadQuality: \"WAV\",\n    popular: true,\n  },\n  {\n    tier: \"Professional\",\n    priceMonthly: 50,\n    priceAnnually: 480, // €40/month when billed annually\n    audioMinutes: 720, // 12 hours per month\n    maxVoices: 50, // Updated from 25 to 50\n    models: [\n      { name: \"Broad Model\", languages: [\"ENG\", \"GER\", \"DUTCH\"] },\n      { name: \"Meditation Model\", languages: [\"ENG\"] },\n      { name: \"Conversation Model\", languages: [\"ENG\"] },\n      { name: \"Character Model\", languages: [\"ENG\"] },\n      { name: \"News Model\", languages: [\"ENG\", \"DUTCH\"] },\n    ],\n    usage: \"Commercial\",\n    apiAccess: true,\n    downloadQuality: \"WAV\",\n    betaDiscount: {\n      regularPrice: 75,\n      discountPercentage: 33,\n    },\n  },\n  {\n    tier: \"Company\",\n    priceMonthly: 300,\n    priceAnnually: 2880, // €240/month when billed annually\n    audioMinutes: 4800, // 80 hours per month\n    maxVoices: 125, // Updated from 100 to 125\n    models: [\n      { name: \"Broad Model\", languages: [\"ENG\", \"GER\", \"DUTCH\"] },\n      { name: \"Meditation Model\", languages: [\"ENG\"] },\n      { name: \"Conversation Model\", languages: [\"ENG\"] },\n      { name: \"Character Model\", languages: [\"ENG\"] },\n      { name: \"News Model\", languages: [\"ENG\", \"DUTCH\"] },\n    ],\n    usage: \"Commercial\",\n    apiAccess: true,\n    downloadQuality: \"WAV\",\n    experimental: true,\n  },\n]\n\nexport function getPlan(tier: PlanTier): PricingPlan {\n  return pricingPlans.find((plan) => plan.tier === tier) || pricingPlans[0]\n}\n\n// Update the formatAudioTime function to use the new abbreviations\nexport function formatAudioTime(minutes: number): string {\n  if (minutes < 60) {\n    return `${minutes}m`\n  }\n\n  const hours = Math.floor(minutes / 60)\n  const remainingMinutes = minutes % 60\n\n  if (remainingMinutes === 0) {\n    return `${hours}h`\n  }\n\n  return `${hours}h ${remainingMinutes}m`\n}\n\n// Update the formatAudioTimeCompact function to use the new abbreviations\nexport function formatAudioTimeCompact(minutes: number): string {\n  if (minutes < 60) {\n    return `${minutes}m`\n  }\n\n  const hours = Math.floor(minutes / 60)\n  return `${hours}h`\n}\n\n// Format audio time for displaying extra time with minutes/hours\nexport function formatAudioTimeExtra(minutes: number): string {\n  if (minutes < 60) {\n    return `${minutes}min`\n  }\n\n  const hours = Math.floor(minutes / 60)\n  const remainingMinutes = minutes % 60\n\n  if (remainingMinutes === 0) {\n    return `${hours}hr`\n  }\n\n  return `${hours}hr ${remainingMinutes}min`\n}\n\n// Update the formatTimeFromSeconds function to use the new abbreviations\nexport function formatTimeFromSeconds(seconds: number): string {\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = Math.floor(seconds % 60)\n\n  if (minutes < 60) {\n    return `${minutes}m ${remainingSeconds}s`\n  }\n\n  const hours = Math.floor(minutes / 60)\n  const remainingMinutes = minutes % 60\n\n  if (remainingMinutes === 0) {\n    return `${hours}h`\n  }\n\n  return `${hours}h ${remainingMinutes}m`\n}\n\n// Calculate monthly equivalent when paid annually\nexport function calculateMonthlyEquivalent(annualPrice: number): number {\n  return annualPrice / 12\n}\n\n// Format price with currency\nexport function formatPrice(price: number, currency = \"€\"): string {\n  return `${currency}${price}`\n}\n\n// Format tokens\nexport function formatTokens(tokens: number): string {\n  return tokens.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n}\n\n// Calculate words to minutes conversion (300 words per minute)\nexport function wordsToMinutes(wordCount: number): number {\n  return wordCount / 300\n}\n\n// Calculate minutes to words conversion (300 words per minute)\nexport function minutesToWords(minutes: number): number {\n  return minutes * 300\n}\n\n// Get extra audio time purchase options based on plan tier\nexport function getExtraAudioTimeOptions(tier: PlanTier): { minutes: number; price: number }[] {\n  switch (tier) {\n    case \"Free\":\n      return []\n    case \"Starter\":\n    case \"Creator\":\n      return [{ minutes: 30, price: 5 }]\n    case \"Professional\":\n    case \"Company\":\n      return [\n        { minutes: 30, price: 4 },\n        { minutes: 60, price: 7 },\n      ]\n    default:\n      return []\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 762, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/utils/usage-utils.ts"],"sourcesContent":["/**\n * Get color class based on usage percentage and absolute time remaining\n * @param usagePercentage Percentage of usage (0-100)\n * @param remainingSeconds Absolute seconds remaining\n * @returns Tailwind color class for the progress bar\n */\nexport function getUsageColorClass(usagePercentage: number, remainingSeconds: number): string {\n  // If less than 3 minutes remaining, always show red regardless of percentage\n  if (remainingSeconds < 180) {\n    return \"bg-red-500\" // Critical - very little time left\n  } else if (usagePercentage < 60) {\n    return \"bg-green-500\" // Plenty of time left\n  } else if (usagePercentage < 80) {\n    return \"bg-amber-500\" // Getting low\n  } else {\n    return \"bg-red-500\" // Critical - almost out of time\n  }\n}\n\n// Update the getUsageStatusMessage function to have a consistent message for Company plan\nexport function getUsageStatusMessage(\n  usagePercentage: number,\n  remainingSeconds: number,\n  planTier: string,\n): { message: string; isWarning: boolean; hasLink?: boolean } | null {\n  // If less than 3 minutes remaining, always show critical message\n  if (remainingSeconds < 180) {\n    // Special case for Company plan\n    if (planTier === \"Company\") {\n      return {\n        message: \"Need more time? Please contact us\",\n        isWarning: true,\n        hasLink: true,\n      }\n    }\n    return {\n      message: \"You have very little audio time left. Consider upgrading your plan.\",\n      isWarning: true,\n    }\n  } else if (usagePercentage >= 80) {\n    // Special case for Company plan\n    if (planTier === \"Company\") {\n      return {\n        message: \"Need more time? Please contact us\",\n        isWarning: true,\n        hasLink: true,\n      }\n    }\n    return {\n      message: \"You're almost out of audio time. Consider upgrading your plan.\",\n      isWarning: true,\n    }\n  } else if (usagePercentage >= 60) {\n    // Special case for Company plan\n    if (planTier === \"Company\") {\n      return {\n        message: \"Need more time? Please contact us\",\n        isWarning: true,\n        hasLink: true,\n      }\n    }\n    return {\n      message: \"Your audio time is getting low.\",\n      isWarning: true,\n    }\n  } else {\n    // When usage is low (green), show upgrade suggestions based on plan\n    switch (planTier) {\n      case \"Free\":\n        return {\n          message: \"Upgrade to Starter plan and get 45 min per month immediately\",\n          isWarning: false,\n        }\n      case \"Starter\":\n        return {\n          message: \"Upgrade to Creator plan and get 2 hours per month immediately\",\n          isWarning: false,\n        }\n      case \"Creator\":\n        return {\n          message: \"Upgrade to Professional plan and get 12 hours per month immediately\",\n          isWarning: false,\n        }\n      case \"Professional\":\n        return {\n          message: \"Upgrade to Company plan and get 80 hours per month immediately\",\n          isWarning: false,\n        }\n      case \"Company\":\n        return {\n          message: \"Need more time? Please contact us\",\n          isWarning: false,\n          hasLink: true,\n        }\n      default:\n        return null\n    }\n  }\n}\n\n// Add a new function to get the text color class based on usage percentage\nexport function getUsageTextColorClass(usagePercentage: number, remainingSeconds: number): string {\n  // If less than 3 minutes remaining, always show red regardless of percentage\n  if (remainingSeconds < 180) {\n    return \"text-red-500\" // Critical - very little time left\n  } else if (usagePercentage < 60) {\n    return \"\" // Default text color - plenty of time left\n  } else if (usagePercentage < 80) {\n    return \"text-amber-500\" // Getting low - amber warning\n  } else {\n    return \"text-red-500\" // Critical - almost out of time\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;AACM,SAAS,mBAAmB,eAAuB,EAAE,gBAAwB;IAClF,6EAA6E;IAC7E,IAAI,mBAAmB,KAAK;QAC1B,OAAO,aAAa,mCAAmC;;IACzD,OAAO,IAAI,kBAAkB,IAAI;QAC/B,OAAO,eAAe,sBAAsB;;IAC9C,OAAO,IAAI,kBAAkB,IAAI;QAC/B,OAAO,eAAe,cAAc;;IACtC,OAAO;QACL,OAAO,aAAa,gCAAgC;;IACtD;AACF;AAGO,SAAS,sBACd,eAAuB,EACvB,gBAAwB,EACxB,QAAgB;IAEhB,iEAAiE;IACjE,IAAI,mBAAmB,KAAK;QAC1B,gCAAgC;QAChC,IAAI,aAAa,WAAW;YAC1B,OAAO;gBACL,SAAS;gBACT,WAAW;gBACX,SAAS;YACX;QACF;QACA,OAAO;YACL,SAAS;YACT,WAAW;QACb;IACF,OAAO,IAAI,mBAAmB,IAAI;QAChC,gCAAgC;QAChC,IAAI,aAAa,WAAW;YAC1B,OAAO;gBACL,SAAS;gBACT,WAAW;gBACX,SAAS;YACX;QACF;QACA,OAAO;YACL,SAAS;YACT,WAAW;QACb;IACF,OAAO,IAAI,mBAAmB,IAAI;QAChC,gCAAgC;QAChC,IAAI,aAAa,WAAW;YAC1B,OAAO;gBACL,SAAS;gBACT,WAAW;gBACX,SAAS;YACX;QACF;QACA,OAAO;YACL,SAAS;YACT,WAAW;QACb;IACF,OAAO;QACL,oEAAoE;QACpE,OAAQ;YACN,KAAK;gBACH,OAAO;oBACL,SAAS;oBACT,WAAW;gBACb;YACF,KAAK;gBACH,OAAO;oBACL,SAAS;oBACT,WAAW;gBACb;YACF,KAAK;gBACH,OAAO;oBACL,SAAS;oBACT,WAAW;gBACb;YACF,KAAK;gBACH,OAAO;oBACL,SAAS;oBACT,WAAW;gBACb;YACF,KAAK;gBACH,OAAO;oBACL,SAAS;oBACT,WAAW;oBACX,SAAS;gBACX;YACF;gBACE,OAAO;QACX;IACF;AACF;AAGO,SAAS,uBAAuB,eAAuB,EAAE,gBAAwB;IACtF,6EAA6E;IAC7E,IAAI,mBAAmB,KAAK;QAC1B,OAAO,eAAe,mCAAmC;;IAC3D,OAAO,IAAI,kBAAkB,IAAI;QAC/B,OAAO,GAAG,2CAA2C;;IACvD,OAAO,IAAI,kBAAkB,IAAI;QAC/B,OAAO,iBAAiB,8BAA8B;;IACxD,OAAO;QACL,OAAO,eAAe,gCAAgC;;IACxD;AACF","debugId":null}},
    {"offset": {"line": 888, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(({ className, type, ...props }, ref) => {\n  return (\n    <input\n      type={type}\n      className={cn(\n        \"flex h-10 w-full rounded-md border border-input bg-background text-foreground px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAAgC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC3F,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,gXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 924, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/admin/utils/plan-usage-utils.ts"],"sourcesContent":["import { pricingPlans, type PlanTier } from \"@/data/pricing-plans\"\n\n// Format time in a compact way (e.g., \"1h 30m\")\nexport function formatTimeCompact(seconds: number): string {\n  const hours = Math.floor(seconds / 3600)\n  const minutes = Math.floor((seconds % 3600) / 60)\n  let result = \"\"\n  if (hours > 0) result += `${hours}h `\n  if (minutes > 0) result += `${minutes}m`\n  return result.trim() || \"0m\"\n}\n\n// Get plan details by tier\nexport function getPlanDetails(tier: PlanTier) {\n  return pricingPlans.find((p) => p.tier === tier) || pricingPlans[0]\n}\n\n// Calculate usage percentage\nexport function calcUsagePercentage(usedSeconds: number, totalSeconds: number): number {\n  if (!totalSeconds) return 0\n  return Math.min(Math.round((usedSeconds / totalSeconds) * 100), 100)\n}\n\n// Calculate used seconds from percentage\nexport function calcUsedSecondsFromPercentage(totalSeconds: number, percentage: number): number {\n  return Math.round((totalSeconds * percentage) / 100)\n}\n\n// Detect if a plan is a downgrade\nexport function isDowngrade(newPlan: PlanTier, currentPlan: PlanTier): boolean {\n  return (\n    pricingPlans.findIndex((p) => p.tier === newPlan) <\n    pricingPlans.findIndex((p) => p.tier === currentPlan)\n  )\n}\n\n// Get default usage percentage for a plan tier\nexport function getDefaultUsagePercentage(plan: PlanTier): number {\n  if (plan === \"Free\" || plan === \"Starter\") return 85\n  if (plan === \"Company\") return 40\n  return 70\n}\n\n// Get a date from 2 weeks ago (for demonstration/demo purposes)\nexport function getSignupDate(): string {\n  const today = new Date()\n  const twoWeeksAgo = new Date(today)\n  twoWeeksAgo.setDate(today.getDate() - 14)\n  return twoWeeksAgo.toISOString().split(\"T\")[0]\n}\n\n// Get the next billing date (for demonstration/demo purposes)\nexport function getNextBillingDate(): string {\n  const today = new Date()\n  const nextMonth = new Date(today)\n  nextMonth.setMonth(today.getMonth() + 1)\n  return nextMonth.toISOString().split(\"T\")[0]\n} "],"names":[],"mappings":";;;;;;;;;;AAAA;;AAGO,SAAS,kBAAkB,OAAe;IAC/C,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;IACnC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,UAAU,OAAQ;IAC9C,IAAI,SAAS;IACb,IAAI,QAAQ,GAAG,UAAU,GAAG,MAAM,EAAE,CAAC;IACrC,IAAI,UAAU,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC;IACxC,OAAO,OAAO,IAAI,MAAM;AAC1B;AAGO,SAAS,eAAe,IAAc;IAC3C,OAAO,2HAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,SAAS,2HAAA,CAAA,eAAY,CAAC,EAAE;AACrE;AAGO,SAAS,oBAAoB,WAAmB,EAAE,YAAoB;IAC3E,IAAI,CAAC,cAAc,OAAO;IAC1B,OAAO,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,AAAC,cAAc,eAAgB,MAAM;AAClE;AAGO,SAAS,8BAA8B,YAAoB,EAAE,UAAkB;IACpF,OAAO,KAAK,KAAK,CAAC,AAAC,eAAe,aAAc;AAClD;AAGO,SAAS,YAAY,OAAiB,EAAE,WAAqB;IAClE,OACE,2HAAA,CAAA,eAAY,CAAC,SAAS,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,WACzC,2HAAA,CAAA,eAAY,CAAC,SAAS,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;AAE7C;AAGO,SAAS,0BAA0B,IAAc;IACtD,IAAI,SAAS,UAAU,SAAS,WAAW,OAAO;IAClD,IAAI,SAAS,WAAW,OAAO;IAC/B,OAAO;AACT;AAGO,SAAS;IACd,MAAM,QAAQ,IAAI;IAClB,MAAM,cAAc,IAAI,KAAK;IAC7B,YAAY,OAAO,CAAC,MAAM,OAAO,KAAK;IACtC,OAAO,YAAY,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;AAChD;AAGO,SAAS;IACd,MAAM,QAAQ,IAAI;IAClB,MAAM,YAAY,IAAI,KAAK;IAC3B,UAAU,QAAQ,CAAC,MAAM,QAAQ,KAAK;IACtC,OAAO,UAAU,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;AAC9C","debugId":null}},
    {"offset": {"line": 983, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/admin/plan-preview/PlanSummaryCards.tsx"],"sourcesContent":["import { Clock, Calendar, BarChart3 } from \"lucide-react\"\nimport { formatAudioTime } from \"@/data/pricing-plans\"\nimport { formatTimeCompact } from \"../utils/plan-usage-utils\"\nimport { getUsageTextColorClass } from \"@/utils/usage-utils\"\n\ninterface PlanSummaryCardsProps {\n  selectedPlan: string\n  monthlyMinutes: number\n  accumulatedMonths: number\n  totalMinutes: number\n  actualUsedSeconds: number\n  remainingSeconds: number\n  usagePercentage: number\n}\n\nexport default function PlanSummaryCards({\n  selectedPlan,\n  monthlyMinutes,\n  accumulatedMonths,\n  totalMinutes,\n  actualUsedSeconds,\n  remainingSeconds,\n  usagePercentage,\n}: PlanSummaryCardsProps) {\n  return (\n    <div className=\"grid grid-cols-3 gap-3 mt-2 mb-4\">\n      <div className=\"bg-muted/30 p-3 rounded-md flex flex-col\">\n        <div className=\"flex items-center gap-1.5 mb-1.5 text-sm font-medium text-primary\">\n          <Clock className=\"h-4 w-4\" />\n          <span>Plan Details</span>\n        </div>\n        <div className=\"text-sm\">\n          <div className=\"flex justify-between mb-1\">\n            <span className=\"text-muted-foreground\">Plan:</span>\n            <span className=\"font-medium\">{selectedPlan}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-muted-foreground\">Monthly:</span>\n            <span>{formatAudioTime(monthlyMinutes)}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-muted/30 p-3 rounded-md flex flex-col\">\n        <div className=\"flex items-center gap-1.5 mb-1.5 text-sm font-medium text-amber-500\">\n          <Calendar className=\"h-4 w-4\" />\n          <span>Accumulation</span>\n        </div>\n        <div className=\"text-sm\">\n          <div className=\"flex justify-between mb-1\">\n            <span className=\"text-muted-foreground\">Months:</span>\n            <span>{accumulatedMonths}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-muted-foreground\">Total:</span>\n            <span>{formatAudioTime(totalMinutes)}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-muted/30 p-3 rounded-md flex flex-col\">\n        <div className=\"flex items-center gap-1.5 mb-1.5 text-sm font-medium text-green-500\">\n          <BarChart3 className=\"h-4 w-4\" />\n          <span>Usage</span>\n        </div>\n        <div className=\"text-sm\">\n          <div className=\"flex justify-between mb-1\">\n            <span className=\"text-muted-foreground\">Used:</span>\n            <span>{formatTimeCompact(actualUsedSeconds)}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-muted-foreground\">Remaining:</span>\n            <span className={getUsageTextColorClass(usagePercentage, remainingSeconds)}>\n              {formatTimeCompact(remainingSeconds)}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAYe,SAAS,iBAAiB,EACvC,YAAY,EACZ,cAAc,EACd,iBAAiB,EACjB,YAAY,EACZ,iBAAiB,EACjB,gBAAgB,EAChB,eAAe,EACO;IACtB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,uMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;0CACjB,6LAAC;0CAAK;;;;;;;;;;;;kCAER,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAwB;;;;;;kDACxC,6LAAC;wCAAK,WAAU;kDAAe;;;;;;;;;;;;0CAEjC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAwB;;;;;;kDACxC,6LAAC;kDAAM,CAAA,GAAA,2HAAA,CAAA,kBAAe,AAAD,EAAE;;;;;;;;;;;;;;;;;;;;;;;;0BAK7B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,6MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC;0CAAK;;;;;;;;;;;;kCAER,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAwB;;;;;;kDACxC,6LAAC;kDAAM;;;;;;;;;;;;0CAET,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAwB;;;;;;kDACxC,6LAAC;kDAAM,CAAA,GAAA,2HAAA,CAAA,kBAAe,AAAD,EAAE;;;;;;;;;;;;;;;;;;;;;;;;0BAK7B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,qNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACrB,6LAAC;0CAAK;;;;;;;;;;;;kCAER,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAwB;;;;;;kDACxC,6LAAC;kDAAM,CAAA,GAAA,yJAAA,CAAA,oBAAiB,AAAD,EAAE;;;;;;;;;;;;0CAE3B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAAwB;;;;;;kDACxC,6LAAC;wCAAK,WAAW,CAAA,GAAA,0HAAA,CAAA,yBAAsB,AAAD,EAAE,iBAAiB;kDACtD,CAAA,GAAA,yJAAA,CAAA,oBAAiB,AAAD,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOjC;KAjEwB","debugId":null}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/admin/utils/date-utils.ts"],"sourcesContent":["// Date formatting and time-since helpers for plan preview components\n\nexport function formatDateForDisplay(dateString: string): string {\n  try {\n    const date = new Date(dateString)\n    return date.toLocaleDateString(\"en-US\", {\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\",\n    })\n  } catch (error) {\n    console.error(\"Error formatting date:\", error)\n    return dateString\n  }\n}\n\nexport function formatTimeSince(dateString: string): string {\n  try {\n    const date = new Date(dateString)\n    const today = new Date()\n    if (isNaN(date.getTime())) return \"recently\"\n    const diffTime = Math.abs(today.getTime() - date.getTime())\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24))\n    if (diffDays < 1) return \"today\"\n    if (diffDays === 1) return \"yesterday\"\n    if (diffDays < 7) return `${diffDays} days ago`\n    if (diffDays < 30) {\n      const diffWeeks = Math.floor(diffDays / 7)\n      return `${diffWeeks} ${diffWeeks === 1 ? \"week\" : \"weeks\"} ago`\n    }\n    const monthDiff = today.getMonth() - date.getMonth() + 12 * (today.getFullYear() - date.getFullYear())\n    return `${monthDiff} ${monthDiff === 1 ? \"month\" : \"months\"} ago`\n  } catch (error) {\n    console.error(\"Error calculating time since:\", error)\n    return \"recently\"\n  }\n}\n\nexport function calculateMonthsSince(dateString: string): number {\n  try {\n    const date = new Date(dateString)\n    const today = new Date()\n    if (isNaN(date.getTime())) return 0\n    const monthDiff = today.getMonth() - date.getMonth() + 12 * (today.getFullYear() - date.getFullYear())\n    return monthDiff\n  } catch (error) {\n    console.error(\"Error calculating months:\", error)\n    return 0\n  }\n} "],"names":[],"mappings":"AAAA,qEAAqE;;;;;;AAE9D,SAAS,qBAAqB,UAAkB;IACrD,IAAI;QACF,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,KAAK,kBAAkB,CAAC,SAAS;YACtC,OAAO;YACP,KAAK;YACL,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAEO,SAAS,gBAAgB,UAAkB;IAChD,IAAI;QACF,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,QAAQ,IAAI;QAClB,IAAI,MAAM,KAAK,OAAO,KAAK,OAAO;QAClC,MAAM,WAAW,KAAK,GAAG,CAAC,MAAM,OAAO,KAAK,KAAK,OAAO;QACxD,MAAM,WAAW,KAAK,KAAK,CAAC,WAAW,CAAC,OAAO,KAAK,KAAK,EAAE;QAC3D,IAAI,WAAW,GAAG,OAAO;QACzB,IAAI,aAAa,GAAG,OAAO;QAC3B,IAAI,WAAW,GAAG,OAAO,GAAG,SAAS,SAAS,CAAC;QAC/C,IAAI,WAAW,IAAI;YACjB,MAAM,YAAY,KAAK,KAAK,CAAC,WAAW;YACxC,OAAO,GAAG,UAAU,CAAC,EAAE,cAAc,IAAI,SAAS,QAAQ,IAAI,CAAC;QACjE;QACA,MAAM,YAAY,MAAM,QAAQ,KAAK,KAAK,QAAQ,KAAK,KAAK,CAAC,MAAM,WAAW,KAAK,KAAK,WAAW,EAAE;QACrG,OAAO,GAAG,UAAU,CAAC,EAAE,cAAc,IAAI,UAAU,SAAS,IAAI,CAAC;IACnE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;IACT;AACF;AAEO,SAAS,qBAAqB,UAAkB;IACrD,IAAI;QACF,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,QAAQ,IAAI;QAClB,IAAI,MAAM,KAAK,OAAO,KAAK,OAAO;QAClC,MAAM,YAAY,MAAM,QAAQ,KAAK,KAAK,QAAQ,KAAK,KAAK,CAAC,MAAM,WAAW,KAAK,KAAK,WAAW,EAAE;QACrG,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 1351, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/admin/fixed-plan-preview-modal.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useState, useEffect, useRef } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { Button } from \"@/components/ui/button\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Label } from \"@/components/ui/label\"\nimport { Input } from \"@/components/ui/input\"\nimport { pricingPlans, formatAudioTime, type PlanTier } from \"@/data/pricing-plans\"\nimport { getUsageColorClass, getUsageStatusMessage, getUsageTextColorClass } from \"@/utils/usage-utils\"\nimport { AlertTriangle, ArrowUpRight, CalendarDays, UserCheck, X } from \"lucide-react\"\nimport { usePlan } from \"./plan-context\"\nimport PlanSummaryCards from \"./plan-preview/PlanSummaryCards\"\nimport {\n  formatDateForDisplay,\n  formatTimeSince,\n} from \"./utils/date-utils\"\nimport {\n  formatTimeCompact,\n  getSignupDate,\n  getNextBillingDate,\n  getDefaultUsagePercentage,\n  getPlanDetails,\n  calcUsagePercentage,\n  calcUsedSecondsFromPercentage,\n  isDowngrade,\n} from \"./utils/plan-usage-utils\"\n\ninterface FixedPlanPreviewModalProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nexport default function FixedPlanPreviewModal({ isOpen, onClose }: FixedPlanPreviewModalProps) {\n  const { updatePlanAndUsage, currentPlan: contextCurrentPlan } = usePlan()\n  const [selectedPlan, setSelectedPlan] = useState<PlanTier>(\"Creator\")\n  const [usagePercentage, setUsagePercentage] = useState(getDefaultUsagePercentage(\"Creator\"))\n  const [accumulatedMonths, setAccumulatedMonths] = useState(1)\n  const [effectiveDate, setEffectiveDate] = useState(getNextBillingDate())\n  const [signupDate, setSignupDate] = useState(getSignupDate())\n  const [showDowngradePreview, setShowDowngradePreview] = useState(false)\n  const [actualUsedSeconds, setActualUsedSeconds] = useState(0)\n  const [mounted, setMounted] = useState(false)\n  const modalRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    setMounted(true)\n    return () => setMounted(false)\n  }, [])\n\n  useEffect(() => {\n    if (isOpen) {\n      const originalStyle = window.getComputedStyle(document.body).overflow\n      document.body.style.overflow = \"hidden\"\n      return () => {\n        document.body.style.overflow = originalStyle\n      }\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (!isOpen) return\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") onClose()\n    }\n    document.addEventListener(\"keydown\", handleEscape)\n    return () => document.removeEventListener(\"keydown\", handleEscape)\n  }, [isOpen, onClose])\n\n  const plan = getPlanDetails(selectedPlan)\n  const monthlyMinutes = plan.audioMinutes\n  const monthlySeconds = monthlyMinutes * 60\n  const totalMinutes = monthlyMinutes * accumulatedMonths\n  const totalSeconds = totalMinutes * 60\n  const contextPlan = getPlanDetails(contextCurrentPlan)\n  const remainingSeconds = totalSeconds - actualUsedSeconds\n\n  useEffect(() => {\n    const defaultPercentage = getDefaultUsagePercentage(selectedPlan)\n    setUsagePercentage(defaultPercentage)\n    setActualUsedSeconds(calcUsedSecondsFromPercentage(monthlySeconds, defaultPercentage))\n    setShowDowngradePreview(isDowngrade(selectedPlan, contextCurrentPlan))\n  }, [selectedPlan, monthlySeconds, contextCurrentPlan])\n\n  useEffect(() => {\n    if (accumulatedMonths > 0 && totalSeconds > 0) {\n      setUsagePercentage(calcUsagePercentage(actualUsedSeconds, totalSeconds))\n    }\n  }, [accumulatedMonths, totalSeconds, actualUsedSeconds])\n\n  const handlePlanChange = (plan: PlanTier) => {\n    setSelectedPlan(plan)\n    setAccumulatedMonths(1)\n    const defaultPercentage = getDefaultUsagePercentage(plan)\n    setUsagePercentage(defaultPercentage)\n    const newPlanDetails = getPlanDetails(plan)\n    const newMonthlySeconds = newPlanDetails.audioMinutes * 60\n    setActualUsedSeconds(calcUsedSecondsFromPercentage(newMonthlySeconds, defaultPercentage))\n    setShowDowngradePreview(isDowngrade(plan, contextCurrentPlan))\n  }\n\n  const handleUsagePercentageChange = (newPercentage: number) => {\n    setUsagePercentage(newPercentage)\n    setActualUsedSeconds(calcUsedSecondsFromPercentage(totalSeconds, newPercentage))\n  }\n\n  const applyChanges = () => {\n    const monthlyUsedPercentage = calcUsagePercentage(actualUsedSeconds, monthlySeconds)\n    const monthlyUsedSeconds = calcUsedSecondsFromPercentage(monthlySeconds, monthlyUsedPercentage)\n    updatePlanAndUsage(selectedPlan, monthlyUsedSeconds)\n    onClose()\n  }\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) onClose()\n  }\n\n  const statusMessage = getUsageStatusMessage(usagePercentage, remainingSeconds, selectedPlan)\n  if (!isOpen || !mounted) return null\n\n  return createPortal(\n    <div\n      className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 p-4\"\n      onClick={handleBackdropClick}\n      aria-modal=\"true\"\n      role=\"dialog\"\n    >\n      <div\n        ref={modalRef}\n        className=\"bg-background rounded-lg shadow-lg w-full max-w-[700px] max-h-[90vh] flex flex-col overflow-hidden\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <div>\n            <h2 className=\"text-xl font-bold\">Preview SPEAK's plans</h2>\n            <p className=\"text-sm text-muted-foreground mt-1\">\n              Visually preview the UI for different users on different plans by selecting a plan from one of the tabs\n              and setting its usage percentage\n            </p>\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"h-8 w-8 rounded-full\"\n            onClick={onClose}\n            aria-label=\"Close dialog\"\n          >\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </div>\n        <div className=\"overflow-y-auto flex-1 p-6\">\n          <Tabs\n            defaultValue={selectedPlan}\n            value={selectedPlan}\n            onValueChange={(value) => handlePlanChange(value as PlanTier)}\n          >\n            <TabsList className=\"grid grid-cols-5 mb-4\">\n              {pricingPlans.map((plan) => (\n                <TabsTrigger key={plan.tier} value={plan.tier}>\n                  {plan.tier}\n                </TabsTrigger>\n              ))}\n            </TabsList>\n            <div className=\"mb-4\">\n              <div className=\"mb-4 p-3 bg-blue-500/10 border border-blue-500/20 rounded-md\">\n                <div className=\"flex items-start gap-2\">\n                  <UserCheck className=\"h-4 w-4 text-blue-500 mt-0.5\" />\n                  <div>\n                    <h4 className=\"text-sm font-medium text-blue-500 mb-1\">User Account Details</h4>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <Label htmlFor=\"signup-date\" className=\"text-xs text-muted-foreground\">\n                          Signup Date:\n                        </Label>\n                        <Input\n                          id=\"signup-date\"\n                          type=\"date\"\n                          value={signupDate}\n                          onChange={(e) => setSignupDate(e.target.value)}\n                          className=\"h-7 text-xs mt-1\"\n                        />\n                        <p className=\"text-xs text-muted-foreground mt-1\">User joined {formatTimeSince(signupDate)}</p>\n                      </div>\n                      <div>\n                        <Label htmlFor=\"current-plan\" className=\"text-xs text-muted-foreground\">\n                          Current Plan:\n                        </Label>\n                        <div className=\"h-7 text-xs mt-1 flex items-center\">\n                          <span className=\"font-medium\">{contextCurrentPlan}</span>\n                        </div>\n                        <p className=\"text-xs text-muted-foreground mt-1\">\n                          {formatAudioTime(contextPlan.audioMinutes)} audio per month\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                <div>\n                  <Label htmlFor=\"usage-slider\" className=\"text-sm\">\n                    Usage Percentage: {usagePercentage}%\n                  </Label>\n                  <div className=\"pt-2\">\n                    <input\n                      id=\"usage-slider\"\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={usagePercentage}\n                      onChange={(e) => handleUsagePercentageChange(Number.parseInt(e.target.value))}\n                      className=\"w-full\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <Label htmlFor=\"accumulated-months\" className=\"text-sm\">\n                    Accumulated Months\n                  </Label>\n                  <div className=\"pt-2 flex items-center gap-2\">\n                    <Input\n                      id=\"accumulated-months\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"12\"\n                      value={accumulatedMonths}\n                      onChange={(e) => setAccumulatedMonths(Math.max(1, Math.min(12, Number.parseInt(e.target.value) || 1)))}\n                      className=\"w-20\"\n                    />\n                    <span className=\"text-sm text-muted-foreground\">\n                      {accumulatedMonths > 1 ? `${accumulatedMonths} months of accumulated time` : \"No accumulated time\"}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              {showDowngradePreview && (\n                <div className=\"mb-4 p-3 bg-amber-500/10 border border-amber-500/20 rounded-md\">\n                  <div className=\"flex items-start gap-2\">\n                    <CalendarDays className=\"h-4 w-4 text-amber-500 mt-0.5\" />\n                    <div>\n                      <h4 className=\"text-sm font-medium text-amber-500 mb-1\">Plan Downgrade Preview</h4>\n                      <p className=\"text-xs text-muted-foreground\">\n                        When downgrading from {contextCurrentPlan} to {selectedPlan}, you'll keep your accumulated time, but\n                        from <span className=\"font-medium\">{formatDateForDisplay(effectiveDate)}</span> you'll receive {\" \"}\n                        <span className=\"font-medium\">{formatAudioTime(monthlyMinutes)}/month</span> instead of {\" \"}\n                        <span className=\"font-medium\">{formatAudioTime(contextPlan.audioMinutes)}/month</span>.\n                      </p>\n                      <div className=\"mt-2 flex items-center gap-2\">\n                        <Label htmlFor=\"effective-date\" className=\"text-xs\">\n                          Effective Date:\n                        </Label>\n                        <Input\n                          id=\"effective-date\"\n                          type=\"date\"\n                          value={effectiveDate}\n                          onChange={(e) => setEffectiveDate(e.target.value)}\n                          className=\"h-7 text-xs w-auto\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div className=\"flex justify-between text-xs mb-1\">\n                <span className=\"text-muted-foreground\">Audio time usage</span>\n                <div>\n                  <span className={getUsageTextColorClass(usagePercentage, remainingSeconds) + \" font-medium\"}>\n                    {formatTimeCompact(remainingSeconds)} left\n                  </span>\n                  <span className=\"text-muted-foreground\"> / {formatAudioTime(totalMinutes)}</span>\n                  {accumulatedMonths > 1 && (\n                    <span className=\"text-xs text-muted-foreground ml-1\">\n                      ({formatAudioTime(monthlyMinutes)}/month × {accumulatedMonths})\n                    </span>\n                  )}\n                </div>\n              </div>\n              <Progress\n                value={usagePercentage}\n                className=\"h-2\"\n                indicatorClassName={getUsageColorClass(usagePercentage, remainingSeconds)}\n              />\n              {statusMessage && (\n                <div\n                  className={`text-xs mt-1 flex items-center gap-1 ${\n                    statusMessage.isWarning\n                      ? usagePercentage >= 80 || remainingSeconds < 180\n                        ? \"text-red-500\"\n                        : \"text-amber-500\"\n                      : \"text-muted-foreground\"\n                  }`}\n                >\n                  {statusMessage.isWarning ? (\n                    <AlertTriangle className=\"h-3 w-3\" />\n                  ) : (\n                    <ArrowUpRight className=\"h-3 w-3\" />\n                  )}\n                  {statusMessage.hasLink ? (\n                    <p>\n                      If you need more time, please {\" \"}\n                      <a\n                        href=\"mailto:talktome@daisys.ai\"\n                        className=\"text-blue-600 underline hover:text-blue-800\"\n                        onClick={(e) => {\n                          e.preventDefault()\n                          window.location.href = \"mailto:talktome@daisys.ai\"\n                        }}\n                      >\n                        contact us\n                      </a>\n                    </p>\n                  ) : (\n                    <p>{statusMessage.message}</p>\n                  )}\n                </div>\n              )}\n            </div>\n          </Tabs>\n          <PlanSummaryCards\n            selectedPlan={selectedPlan}\n            monthlyMinutes={monthlyMinutes}\n            accumulatedMonths={accumulatedMonths}\n            totalMinutes={totalMinutes}\n            actualUsedSeconds={actualUsedSeconds}\n            remainingSeconds={remainingSeconds}\n            usagePercentage={usagePercentage}\n          />\n        </div>\n        <div className=\"p-6 border-t flex justify-between\">\n          <Button type=\"button\" variant=\"outline\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button type=\"button\" variant=\"dark\" onClick={applyChanges}>\n            Apply Changes\n          </Button>\n        </div>\n      </div>\n    </div>,\n    document.body,\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2138, "column": 0}, "map": {"version":3,"sources":["file:///Users/jasperhartsuijker/Documents/WebDev/speak-jasp/components/admin/plan-preview-panel.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Slider } from \"@/components/ui/slider\"\nimport { Label } from \"@/components/ui/label\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Button } from \"@/components/ui/button\"\nimport { AlertTriangle, ArrowUpRight, UserCheck, CalendarDays } from \"lucide-react\"\nimport AudioTimeDisplay from \"../audio-time-display\"\nimport { pricingPlans, formatTimeFromSeconds, formatAudioTime, type PlanTier } from \"@/data/pricing-plans\"\nimport { getUsageColorClass, getUsageStatusMessage, getUsageTextColorClass } from \"@/utils/usage-utils\"\nimport { usePlan } from \"./plan-context\"\nimport { Input } from \"@/components/ui/input\"\nimport FixedPlanPreviewModal from \"./fixed-plan-preview-modal\"\nimport PlanSummaryCards from \"./plan-preview/PlanSummaryCards\"\nimport {\n  formatDateForDisplay,\n  formatTimeSince,\n} from \"./utils/date-utils\"\nimport {\n  formatTimeCompact,\n  getSignupDate,\n  getNextBillingDate,\n  getDefaultUsagePercentage,\n  getPlanDetails,\n  calcUsagePercentage,\n  calcUsedSecondsFromPercentage,\n  isDowngrade,\n} from \"./utils/plan-usage-utils\"\n\nexport default function PlanPreviewPanel() {\n  const { currentPlan, usedSeconds: contextUsedSeconds, updatePlanAndUsage } = usePlan()\n  const [selectedPlan, setSelectedPlan] = useState<PlanTier>(currentPlan)\n  const [usagePercentage, setUsagePercentage] = useState(() => getDefaultUsagePercentage(currentPlan))\n  const [accumulatedMonths, setAccumulatedMonths] = useState(1)\n  const [signupDate, setSignupDate] = useState(getSignupDate())\n  const [effectiveDate, setEffectiveDate] = useState(getNextBillingDate())\n  const [showDowngradePreview, setShowDowngradePreview] = useState(false)\n  const [actualUsedSeconds, setActualUsedSeconds] = useState(0)\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  // Update selected plan and usage when context changes\n  useEffect(() => {\n    setSelectedPlan(currentPlan)\n    const plan = getPlanDetails(currentPlan)\n    const totalSecs = plan.audioMinutes * 60\n    setUsagePercentage(calcUsagePercentage(contextUsedSeconds, totalSecs))\n    setActualUsedSeconds(contextUsedSeconds)\n  }, [currentPlan, contextUsedSeconds])\n\n  // Plan details\n  const plan = getPlanDetails(selectedPlan)\n  const monthlyMinutes = plan.audioMinutes\n  const monthlySeconds = monthlyMinutes * 60\n  const totalMinutes = monthlyMinutes * accumulatedMonths\n  const totalSeconds = totalMinutes * 60\n\n  // Recalculate usage percentage when accumulated months changes\n  useEffect(() => {\n    if (accumulatedMonths > 0 && totalSeconds > 0) {\n      setUsagePercentage(calcUsagePercentage(actualUsedSeconds, totalSeconds))\n    }\n  }, [accumulatedMonths, totalSeconds, actualUsedSeconds])\n\n  // Calculate remaining seconds\n  const remainingSeconds = totalSeconds - actualUsedSeconds\n  const contextPlan = getPlanDetails(currentPlan)\n\n  // Handle plan change\n  const handlePlanChange = (plan: PlanTier) => {\n    setSelectedPlan(plan)\n    setAccumulatedMonths(1)\n    const defaultPercentage = getDefaultUsagePercentage(plan)\n    setUsagePercentage(defaultPercentage)\n    const newPlanDetails = getPlanDetails(plan)\n    const newMonthlySeconds = newPlanDetails.audioMinutes * 60\n    setActualUsedSeconds(calcUsedSecondsFromPercentage(newMonthlySeconds, defaultPercentage))\n    setShowDowngradePreview(isDowngrade(plan, currentPlan))\n  }\n\n  // Handle usage percentage change\n  const handleUsagePercentageChange = (newPercentage: number) => {\n    setUsagePercentage(newPercentage)\n    setActualUsedSeconds(calcUsedSecondsFromPercentage(totalSeconds, newPercentage))\n  }\n\n  // Apply changes to the global state\n  const applyChanges = () => {\n    const monthlyUsedPercentage = calcUsagePercentage(actualUsedSeconds, monthlySeconds)\n    const monthlyUsedSeconds = calcUsedSecondsFromPercentage(monthlySeconds, monthlyUsedPercentage)\n    updatePlanAndUsage(selectedPlan, monthlyUsedSeconds)\n    // Optionally show toast here\n  }\n\n  // Reset to the current values from context\n  const resetToDefaults = () => {\n    setSelectedPlan(currentPlan)\n    setAccumulatedMonths(1)\n    const plan = getPlanDetails(currentPlan)\n    const totalSecs = plan.audioMinutes * 60\n    setUsagePercentage(calcUsagePercentage(contextUsedSeconds, totalSecs))\n    setActualUsedSeconds(contextUsedSeconds)\n  }\n\n  const statusMessage = getUsageStatusMessage(usagePercentage, remainingSeconds, selectedPlan)\n\n  return (\n    <>\n      <Card className=\"w-full\">\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>Plan Preview Panel</CardTitle>\n              <CardDescription>Preview how AudioTimeDisplay looks for different plans and usage levels</CardDescription>\n            </div>\n            <Badge variant=\"outline\" className=\"bg-yellow-500/10 text-yellow-600 border-yellow-500/20\">\n              Admin Only\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <Tabs\n            defaultValue={selectedPlan}\n            value={selectedPlan}\n            onValueChange={(value) => handlePlanChange(value as PlanTier)}\n          >\n            <TabsList className=\"grid grid-cols-5 mb-4\">\n              {pricingPlans.map((plan) => (\n                <TabsTrigger key={plan.tier} value={plan.tier}>\n                  {plan.tier}\n                </TabsTrigger>\n              ))}\n            </TabsList>\n\n            <div className=\"mb-4\">\n              {/* User Signup Date Section */}\n              <div className=\"mb-4 p-3 bg-blue-500/10 border border-blue-500/20 rounded-md\">\n                <div className=\"flex items-start gap-2\">\n                  <UserCheck className=\"h-4 w-4 text-blue-500 mt-0.5\" />\n                  <div>\n                    <h4 className=\"text-sm font-medium text-blue-500 mb-1\">User Account Details</h4>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <Label htmlFor=\"signup-date\" className=\"text-xs text-muted-foreground\">\n                          Signup Date:\n                        </Label>\n                        <Input\n                          id=\"signup-date\"\n                          type=\"date\"\n                          value={signupDate}\n                          onChange={(e) => setSignupDate(e.target.value)}\n                          className=\"h-7 text-xs mt-1\"\n                        />\n                        <p className=\"text-xs text-muted-foreground mt-1\">User joined {formatTimeSince(signupDate)}</p>\n                      </div>\n                      <div>\n                        <Label htmlFor=\"current-plan\" className=\"text-xs text-muted-foreground\">\n                          Current Plan:\n                        </Label>\n                        <div className=\"h-7 text-xs mt-1 flex items-center\">\n                          <span className=\"font-medium\">{currentPlan}</span>\n                        </div>\n                        <p className=\"text-xs text-muted-foreground mt-1\">\n                          {formatAudioTime(contextPlan.audioMinutes)} audio per month\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                <div>\n                  <Label>Usage Percentage: {usagePercentage}%</Label>\n                  <Slider\n                    value={[usagePercentage]}\n                    min={0}\n                    max={100}\n                    step={1}\n                    onValueChange={(value) => handleUsagePercentageChange(value[0])}\n                    className=\"mt-2\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"accumulated-months\">Accumulated Months</Label>\n                  <div className=\"flex items-center gap-2 mt-2\">\n                    <Input\n                      id=\"accumulated-months\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"12\"\n                      value={accumulatedMonths}\n                      onChange={(e) => setAccumulatedMonths(Math.max(1, Math.min(12, Number.parseInt(e.target.value) || 1)))}\n                      className=\"w-20\"\n                    />\n                    <span className=\"text-sm text-muted-foreground\">\n                      {accumulatedMonths > 1 ? `${accumulatedMonths} months of accumulated time` : \"No accumulated time\"}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Downgrade Preview Section */}\n              {showDowngradePreview && (\n                <div className=\"mb-4 p-3 bg-amber-500/10 border border-amber-500/20 rounded-md\">\n                  <div className=\"flex items-start gap-2\">\n                    <CalendarDays className=\"h-4 w-4 text-amber-500 mt-0.5\" />\n                    <div>\n                      <h4 className=\"text-sm font-medium text-amber-500 mb-1\">Plan Downgrade Preview</h4>\n                      <p className=\"text-xs text-muted-foreground\">\n                        When downgrading from {currentPlan} to {selectedPlan}, you'll keep your accumulated time, but\n                        from <span className=\"font-medium\">{formatDateForDisplay(effectiveDate)}</span> you'll receive {\" \"}\n                        <span className=\"font-medium\">{formatAudioTime(monthlyMinutes)}/month</span> instead of {\" \"}\n                        <span className=\"font-medium\">{formatAudioTime(contextPlan.audioMinutes)}/month</span>.\n                      </p>\n                      <div className=\"mt-2 flex items-center gap-2\">\n                        <Label htmlFor=\"effective-date\" className=\"text-xs\">\n                          Effective Date:\n                        </Label>\n                        <Input\n                          id=\"effective-date\"\n                          type=\"date\"\n                          value={effectiveDate}\n                          onChange={(e) => setEffectiveDate(e.target.value)}\n                          className=\"h-7 text-xs w-auto\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex justify-between text-xs mb-1\">\n                <span className=\"text-muted-foreground\">Audio time usage</span>\n                <span>\n                  <span className={getUsageTextColorClass(usagePercentage, remainingSeconds)}>\n                    {formatTimeFromSeconds(remainingSeconds)} left\n                  </span>\n                  <span className=\"text-muted-foreground\"> / {formatAudioTime(totalMinutes)}</span>\n                  {accumulatedMonths > 1 && (\n                    <span className=\"text-xs text-muted-foreground ml-1\">\n                      ({formatAudioTime(monthlyMinutes)}/month × {accumulatedMonths})\n                    </span>\n                  )}\n                </span>\n              </div>\n\n              <Progress\n                value={usagePercentage}\n                className=\"h-2\"\n                indicatorClassName={getUsageColorClass(usagePercentage, remainingSeconds)}\n              />\n\n              {statusMessage && (\n                <div\n                  className={`text-xs mt-1 flex items-center gap-1 ${\n                    statusMessage.isWarning\n                      ? usagePercentage >= 80 || remainingSeconds < 180\n                        ? \"text-red-500\"\n                        : \"text-amber-500\"\n                      : \"text-muted-foreground\"\n                  }`}\n                >\n                  {statusMessage.isWarning ? (\n                    <AlertTriangle className=\"h-3 w-3\" />\n                  ) : (\n                    <ArrowUpRight className=\"h-3 w-3\" />\n                  )}\n                  {statusMessage.hasLink ? (\n                    <p>\n                      If you need more time, please {\" \"}\n                      <a\n                        href=\"mailto:talktome@daisys.ai\"\n                        className=\"text-blue-600 underline hover:text-blue-800\"\n                        onClick={(e) => {\n                          e.preventDefault()\n                          window.location.href = \"mailto:talktome@daisys.ai\"\n                        }}\n                      >\n                        contact us\n                      </a>\n                    </p>\n                  ) : (\n                    <p>{statusMessage.message}</p>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Summary Cards (refactored) */}\n            <PlanSummaryCards\n              selectedPlan={selectedPlan}\n              monthlyMinutes={monthlyMinutes}\n              accumulatedMonths={accumulatedMonths}\n              totalMinutes={totalMinutes}\n              actualUsedSeconds={actualUsedSeconds}\n              remainingSeconds={remainingSeconds}\n              usagePercentage={usagePercentage}\n            />\n\n            <div className=\"border-t pt-4\">\n              <h3 className=\"text-sm font-medium mb-4\">Preview</h3>\n              <div className=\"flex flex-col gap-4\">\n                <div>\n                  <h4 className=\"text-xs text-muted-foreground mb-2\">AudioTimeDisplay Component:</h4>\n                  <div className=\"flex justify-center p-4 bg-background border rounded-md\">\n                    <AudioTimeDisplay usedSeconds={actualUsedSeconds} tier={selectedPlan} />\n                  </div>\n                </div>\n                <div>\n                  <h4 className=\"text-xs text-muted-foreground mb-2\">In Navbar Context:</h4>\n                  <div className=\"flex items-center justify-between p-4 bg-background border-b border-border\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-8 h-8 bg-primary/20 rounded-md\"></div>\n                      <div className=\"text-muted-foreground\">/</div>\n                      <span className=\"font-medium\">Project Name</span>\n                    </div>\n                    <div className=\"flex items-center space-x-4\">\n                      <AudioTimeDisplay usedSeconds={actualUsedSeconds} tier={selectedPlan} />\n                      <div className=\"w-8 h-8 bg-secondary rounded-full\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Tabs>\n          <div className=\"flex justify-between mt-4 gap-2\">\n            <Button variant=\"outline\" size=\"sm\" onClick={resetToDefaults}>\n              Reset to Defaults\n            </Button>\n            <div className=\"space-x-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={() => setIsModalOpen(true)}>\n                Open in Modal\n              </Button>\n              <Button variant=\"dark\" size=\"sm\" onClick={applyChanges}>\n                Apply Changes\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      <FixedPlanPreviewModal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} />\n    </>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}